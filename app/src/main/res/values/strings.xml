<resources>
    <string name="app_name">Android App Example</string>
    <string name="navigation_drawer_open">Open navigation drawer</string>
    <string name="navigation_drawer_close">Close navigation drawer</string>
    <string name="nav_header_title">IG3 - Développement mobile</string>
    <string name="nav_header_subtitle">Anne SMAL &amp; Lisa TRAPLETTI</string>
    <string name="nav_header_desc">Navigation header</string>
    <string name="action_settings">Settings</string>

    <string name="menu_module_1">Module 1</string>
    <string name="menu_module_2">Module 2</string>
    <string name="menu_module_3">Module 3</string>

    <string name="module_title_start">Start</string>


    <string name="title_activity_welcome">Welcome !</string>

    <string name="welcome_title">Welcome !</string>
    <string name="welcome_description">Through this application, you will learn how to develop an Android mobile app.
        Use it as an example : Go to the source code, test it with some rotation, plane mode, …
        So that you will discover how to create your own super project. \n
        OK, time to dive into the amazing Android World !
    </string>

    <!-- Module 1 Activities and Fragments -->
    <string name="module_1_title">Activities &amp; Fragments</string>
    <string name="module_1_description">Activities and fragments are the basis of a mobile application,
        as they are representing your entire User Interface. \n
        In this chapter, you will learn what is an activity, a fragment, and how Android OS is working
        with them.
    </string>

    <string name="module_1_activity_lifecycle_title">Activity lifecycle</string>

    <string name="module_1_what_is_an_activity_title">What is an Activity ?</string>
    <string name="module_1_what_is_an_activity_description">An <b>activity</b> provides the window
        in which the app draws its UI. Generally, one activity implements one screen of the app. \n \n

        <b><u>How to create an activity ?</u></b> \n
        For this, we need : \n
        - A Java (or Kotlin) class extending Activity; \n
        - A layout; \n
        - To declare it in the app\'s manifest (AndroidManifest.xml); \n \n

        The <b>Java class</b> represents the <i>business</i> part of an activity. \n
        The <b>layout</b> represents its view part, written in XML. You will have more details about
        layouts in the next chapter. \n \n \n

        <b><u>How to navigate through activities ?</u></b> \n
        By using an <b>intent</b>. There are two types of them : \n
        - <b>Explicit intent</b> : Start activities of your app \n
        - <b>Implicit intent</b> : Start activities of other applications (Contacts, SMS, …) \n \n

        Go to the <i>WelcomeActivity</i> to discover how to create an explicit intent. \n
        For the implicit intent, click on the next button and go to the code to check the differences between
        the two intents.
    </string>

    <string name="module_1_how_to_use_activities">When you send an Intent, if Android sees more
        than one app that can handle it, it will show a Chooser. Android knows which app can handle
        which actions by checking their Manifest. \n
        That\'s why in our example, we had to write in the manifest that we are using the camera. \n
        Go to the manifest to check.
    </string>

    <string name="module_1_go_to_camera">Use camera</string>


    <string name="module_1_every_activity_has_its_lifecycle">An activity has its own lifecycle : </string>
    <string name="module_1_go_to_lifecycle_testing_activity"> <b>NEVER</b> call these methods yourself :
        This lifecycle is managed only by Android. \n \n
        Understanding the lifecycle of an activity, and what you can / should do at each step is very
        important part of the mobile development. \n
        Go to the <b>LifecycleTestingActivity</b> and discover how this lifecycle is working and how
        Android is managing it.</string>
    <string name="module_1_test_lifecycle">Test lifecycle</string>

    <string name="title_activity_lifecycle_testing">LifecycleTestingActivity</string>
    <string name="module_1_lifecycle_testing_description">
        Mastering the lifecycle of an activity will considerably help you to avoid a lot of bugs.
        So take your time to analyze the logs, the code, play with the emulator, …
        And ask you the following questions : What would happen if \n

        - I\'m initializing my counter in onStart() instead of onCreate() ? \n
        - I\'m leaving the application ? \n
        - I\'m rotating the phone ? \n
        - Android is killing my app to free some resources for other apps ? (Yes, … it does) \n
    </string>
    <string name="module_1_lifecycle_testing_my_counter">My counter : %1$d</string>


    <string name="module_1_what_is_a_fragment_title">What is a fragment ?</string>
    <string name="module_1_what_is_a_fragment_description"> As you saw, we didn\'t create an activity
        for each screen of our app. It is because we decided to use <b>fragments</b>, combined to
        our activities. \n \n
        A <b>fragment</b> is a piece of user interface, used in an activity.
        Fragments have been introduced by Android for app development on bigger devices (such as tablets) :
        As a fragment is only a "piece" of UI, you can combine multiple fragments in a single activity
        to build a multi-pane UI and reuse a fragment in different activities. \n
    </string>
    <string name="module_1_fragment_lifecycle">Fragments also have their own lifecycle, which is very
        similar to activity lifecycle, but has some particularities. Go to the <b>LifecycleTestingFragment</b>
        to check the differences with the activity lifecycle.</string>

    <string name="module_1_fragments_on_smartphone">On smartphone</string>
    <string name="module_1_fragments_on_tablet">On tablet</string>

    <string name="module_1_multipane_fragment">You can think of a fragment as a modular section of an activity,
        which has its own lifecycle, receives its own input events, and which you can add or remove
        while the activity is running. \n \n
        Check <b>WhatIsAFragmentFragment</b> class and try to understand how an
        activity can integrate a fragment in its UI.
    </string>


    <string name="module_1_first_ui_name">Name</string>
    <string name="module_1_first_ui_age">Age</string>
    <string name="module_1_first_ui_mail">Mail</string>
    <string name="module_1_first_ui_password">Password</string>
    <string name="module_1_first_toast">Toast</string>
    <string name="module_1_toast_hello_message">Hello %1$s, this is a toast !</string>

    <string name="module_1_passing_arguments_description">It is possible to pass some
    information from a fragment to another, using <b>bundles</b>. Go to the <b>FirstUiFragment</b>
    and <b>SecondUiFragment</b> classes to check this mechanism.</string>

    <string name="module_1_mandatory_field">Mandatory field</string>
    <string name="module_1_first_ui_not_valid_age">Not valid age</string>
    <string name="module_1_first_ui_invalid_format">Invalid format</string>


    <!-- Module 2 Layouts -->
    <string name="module_2_title">Layouts</string>
    <string name="module_2_description">Layouts are XML files \"assembling\" all the UI components together.
        Each activity and each fragment will, at least, be linked to one layout. \n
        In this chapter, you will learn what is a layout, how to create one and how to link it to
        an activity, a fragment, or another UI component.
    </string>

    <string name="module_2_layout_structure_title">Layout Structure</string>


    <!-- Module 3 Resources -->
    <string name="module_3_title">Resources</string>
    <string name="module_3_description">Layouts, images, colors, navigation, strings, … Resources
        are a very important part of the Android Development. In this module, you will learn
        what is the role of each resource type, and how to use them efficiently in your app.
    </string>

    <string name="module_3_resources_types_title">Resources Types</string>

    <string name="module_3_resources_organisation_by_android_studio">Android is requiring a specific
        structure in its projects, and this includes the <b>resources</b> part as well.
        Under the folder <b>res</b>, you can find the following sub-folders :
    </string>
    <string name="module_3_resource_type_drawable" translatable="false">Drawable</string>
    <string name="module_3_resource_type_layout" translatable="false">Layout</string>
    <string name="module_3_resource_type_menu" translatable="false">Menu</string>
    <string name="module_3_resource_type_mipmap" translatable="false">Mipmap</string>
    <string name="module_3_resource_type_navigation" translatable="false">Navigation</string>
    <string name="module_3_resource_type_values" translatable="false">Values</string>

    <string name="next">Next</string>
    <string name="previous">Previous</string>
    <string name="done">Done</string>
    <string name="add">Add</string>

    <string name="hello_blank_fragment">Hello blank fragment</string>

</resources>
